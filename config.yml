title: Intro to Reason for Web
tagline: Learn You Some Reason for Great Good by building your first Reason React App!
description:
  Hello and welcome to Reason :)

  In this course we will cover the basic setup needed to write a small To-do
  application, all the way from cloning it to publishing to Github Pages.
template:
  name: reason-todo-app
  repo: lab-template.intro-to-reason
before:
  - type: createIssue
    title: Welcome
    body: 00.00-welcome.md
    comments:
      - 00.01-what-we-are-building.md
      - 00.02-begin-here.md

steps:

- title: Welcome
  description: Confirm that the course should begin.
  event: issues
  link: '{{ repoUrl }}/issues/1'
  actions:
  - type: gate
    left: '%payload.action%'
    operator: ===
    right: closed
  - type: createPullRequest
    title: Getting Started
    body: 01.00-setup.md
    head: setup
    action_id: setup_pr
  - type: assignRegistrant
    issue: '%actions.setup_pr.data.number%'
  - type: respond
    with: 00.03-goto-first-pr.md
    data:
      url: '%actions.setup_pr.data.html_url%'

- title: 'Local Setup: Install Dependencies'
  description: Get the repo up and working in your computer
  event: pull_request.synchronize
  link: '%actions.setup_pr.data.html_url%'
  actions:
  - type: getFileContents
    action_id: fileContents
    filename: 'yarn.lock'
  - type: gate
    left: '/^# THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.$/gm'
    operator: test
    right: '%actions.fileContents%'
  - type: respond
    with: 01.01-install-vs-code.md

- title: 'Local Setup: VS Code'
  description: Install VS Code
  event: pull_request.synchronize
  link: '%actions.setup_pr.data.html_url%'
  actions:
  - type: getFileContents
    action_id: fileContents
    filename: lib/js/src/model.bs.js
  - type: gate
    left: '/Generated by BUCKLESCRIPT/gm'
    operator: test
    right: '%actions.fileContents%'
  - type: respond
    with: 01.02-build-project.md

- title: 'Local Setup: Build Project'
  description: Create project bundle
  event: pull_request.synchronize
  link: '%actions.setup_pr.data.html_url%'
  actions:
  - type: getFileContents
    filename: bundle/index.js
    action_id: bundle_index_js
  - type: gate
    left: '/fastpack/gm'
    operator: test
    right: '%actions.bundle_index_js%'
  - type: respond
    with: 01.03-check-app-local.md
    data:
      files_url: '%actions.setup_pr.data.html_url%/files'
  - type: requestReviewFromRegistrant

- title: 'Local Setup: Check App Works'
  description: Create project bundle
  event: pull_request_review.submitted
  link: '%actions.setup_pr.data.html_url%'
  actions:
  - type: gate
    left: '%payload.review.state%'
    operator: ===
    right: approved
  - type: createPullRequest
    title: Creating the ToDo App
    body: 02.00-show-tasks.md
    head: todo-app
    action_id: app_pr
  - type: octokit
    method: pullRequests.createComment
    owner: '%actions.app_pr.data.head.repo.owner.login%'
    repo: '%actions.app_pr.data.head.repo.name%'
    number: '%actions.app_pr.data.number%'
    commit_id: '%actions.app_pr.data.head.sha%'
    path: src/component.re
    body: |
      It seems we are using a single hardcoded task...
    position: 37
  - type: octokit
    method: pullRequests.createComment
    owner: '%actions.app_pr.data.head.repo.owner.login%'
    repo: '%actions.app_pr.data.head.repo.name%'
    number: '%actions.app_pr.data.number%'
    commit_id: '%actions.app_pr.data.head.sha%'
    path: src/model.re
    body: |
      ...but in our initial state we have multiple tasks... ðŸ¤”

      perhaps we should modify our component to not use a hardcoded task and instead use the ones that are in the state.
    position: 63
  - type: octokit
    method: pullRequests.createComment
    owner: '%actions.app_pr.data.head.repo.owner.login%'
    repo: '%actions.app_pr.data.head.repo.name%'
    number: '%actions.app_pr.data.number%'
    commit_id: '%actions.app_pr.data.head.sha%'
    path: src/component.re
    body: |
      Here's an example of how we could fix this. You will notice that there's a few steps involved.

      ```suggestion
      <ul>
        Model.State.(
          state.tasks
          |> List.map(task => <Task task />)
          |> Array.of_list
          |> React.array
        )
      </ul>
      ```

      Let's walk through this.

      We begin by accessing the tasks in the state with:

      ```reason
      Model.State.(
        state.tasks
      )
      ```

    position: 37
  - type: respond
    with: 01.04-github-pages.md
    data:
      next_pr: '%actions.app_pr.data.html_url%'
  - type: mergePullRequest
    pullRequest: Getting Started
  - type: deleteBranch
    branch: setup

    # - title: 'ToDo App: Listing Tasks'
    #   description: In this step we will start working on our ToDo application and make it list our tasks.
